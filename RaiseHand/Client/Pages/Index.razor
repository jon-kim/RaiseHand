@page "/"
@inject NavigationManager NavigationManager
@implements IAsyncDisposable

<PageTitle>Riase Hand</PageTitle>

<div class="vh-100" style="background-color:pink;">

        <h3>Raise Hand</h3>

        @if (!IsConnected)
        {
            <main class="flex-shrink-0">
                <div class="container">
                    <div class="row">
                        <div class="input-group">
                            <input @bind="_username" class="form-control" placeholder="What's your name?" @onkeyup="HandleInput" />
                            <button class="btn btn-primary form-control-append" @onclick="Connect">Connect</button>
                        </div>
                    </div>
                </div>
            </main>
        }
        else
        {
            <main class="flex-shrink-0">
                <div class="container">
                    @foreach(KeyValuePair<string, bool> hand in _hands)
                    {
                        <div class="row" style="height:50px;">
                            <div class="col-4">
                                @hand.Key
                            </div>
                            <div class="col-4">
                                @if (hand.Value)
                                {
                                    <img src="/assets/hand.svg" width="50px" height="50px" />
                                }
                            </div>
                        </div>
                    }
                </div>
            </main>

            <footer class="footer mt-auto py-3 bg-light">
                <div class="container">
                    <div class="row justify-content-end">
                        <div class="col-4">
                            <input class="btn-check" type="checkbox" id="checkBoxHand" @onclick="Send" checked="@_hand" disabled="@(!IsConnected)" />
                            <label class="btn btn-outline-info" for="checkBoxHand"> @(_hand?"Lower":"Riase") Hand</label>
                        </div>
                    </div>
                </div>
            </footer>
        }
</div>
@code {
    private HubConnection? _hubConnection;
    private SortedDictionary<string, bool> _hands = new SortedDictionary<string, bool>();
    private string _username = string.Empty;
    private bool _hand = false;

    private async Task Connect()
    {
        _hubConnection = new HubConnectionBuilder().WithUrl(NavigationManager.ToAbsoluteUri($"/raisehandhub?username={_username}")).Build();

        _hubConnection.On<string, bool>("ReceiveHand", (user, hand) =>
        {
            _hands[user] = hand;
            StateHasChanged();

        });

        await _hubConnection.StartAsync();
    }

    private async Task Send()
    {
        if (_hubConnection != null)
        {
            _hand = !_hand;
            await _hubConnection.SendAsync("SetHandRaised", _username, _hand);
        }
    }

    private async Task HandleInput(KeyboardEventArgs args)
    {
        if (args.Key.Equals("Enter"))
        {
            await Connect();
        }
    }

    public bool IsConnected => _hubConnection?.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        if (_hubConnection != null)
            await _hubConnection.DisposeAsync();
    }
} 